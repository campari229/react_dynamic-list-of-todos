{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","api.ts","components/Buttonns/Buttons.tsx","App.tsx","index.tsx"],"names":["TodoItem","todo","className","style","backgroundColor","completed","user","name","title","TodoList","todos","map","key","id","getUsers","a","fetch","response","json","getTodos","Buttons","props","type","onClick","titleSort","nameSort","showCompleted","App","state","isLoading","loadTodos","setState","data","users","preparedTodos","find","userId","sortByTitle","prevState","sort","b","localeCompare","sortByName","Number","this","length","disabled","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2WASaA,G,YAA4B,SAAC,GAAc,IAAD,EAAXC,EAAW,EAAXA,KAC1C,OACE,yBAAKC,UAAU,qBAAqBC,MAAO,CAAEC,gBAAgB,GAAD,OAAKH,EAAKI,UAAY,QAAU,SAC1F,0BAAMH,UAAU,mBAAhB,UAAmCD,EAAKK,YAAxC,aAAmC,EAAWC,MAC9C,uBAAGL,UAAU,oBAAoBD,EAAKO,UCH/BC,G,MAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,wBAAIR,UAAU,mBACXQ,EAAMC,KAAI,SAAAV,GAAI,OACb,wBACEC,UAAU,aACVU,IAAKX,EAAKY,IAEV,kBAAC,EAAD,CAAUZ,KAAMA,WCfba,EAAQ,uCAAG,4BAAAC,EAAA,sEACCC,MAJR,2CAGO,cAChBC,EADgB,yBAGfA,EAASC,QAHM,2CAAH,qDAMRC,EAAQ,uCAAG,4BAAAJ,EAAA,sEACCC,MATR,2CAQO,cAChBC,EADgB,yBAGfA,EAASC,QAHM,2CAAH,qDCCRE,G,MAA2B,SAACC,GACvC,OACE,yBAAKnB,UAAU,iBACb,4BACEA,UAAU,MACVoB,KAAK,SACLC,QAASF,EAAMG,WAHjB,iBAOA,4BACEtB,UAAU,MACVoB,KAAK,SACLC,QAASF,EAAMI,UAHjB,gBAOA,4BACEvB,UAAU,MACVoB,KAAK,SACLC,QAASF,EAAMK,eAHjB,2BCgESC,E,4MA7EbC,MAAQ,CACNlB,MAAO,GACPmB,WAAW,G,EAGbC,U,sBAAY,gCAAAf,EAAA,6DACV,EAAKgB,SAAS,CACZF,WAAW,IAFH,SAKWV,IALX,cAKJT,EALI,OAK2BsB,KAL3B,SAMWlB,IANX,OAMJmB,EANI,OAM2BD,KAC/BE,EAAgCxB,EAAMC,KAAI,SAACV,GAAD,mBAAC,eAE1CA,GAFyC,IAG5CK,KAAM2B,EAAME,MAAK,SAAC7B,GAAD,OAAgBA,EAAKO,KAAOZ,EAAKmC,eAItD,EAAKL,SAAS,CACZrB,MAAOwB,EACPL,WAAW,IAhBH,2C,EAoBZQ,YAAc,WACZ,EAAKN,UAAS,SAAAO,GAAS,MAAK,CAC1B5B,MAAO4B,EAAU5B,MAAM6B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUzB,EAAEP,MAAMiC,cAAcD,EAAEhC,e,EAIlEkC,WAAa,WACX,EAAKX,UAAS,SAAAO,GAAS,MAAK,CAC1B5B,MAAO4B,EAAU5B,MAAM6B,MAAK,SAACxB,EAAGyB,GAAJ,yBAAUzB,EAAET,YAAZ,aAAU,EAAQC,KAAKkC,cAAb,UAA2BD,EAAElC,YAA7B,aAA2B,EAAQC,c,EAI7EmB,cAAgB,WACd,EAAKK,UAAS,SAAAO,GAAS,MAAK,CAC1B5B,MAAO4B,EAAU5B,MAAM6B,MAAK,SAACxB,EAAGyB,GAAJ,OAAUG,OAAOH,EAAEnC,WAAasC,OAAO5B,EAAEV,mB,uDAI/D,IAAD,EACsBuC,KAAKhB,MAA1BlB,EADD,EACCA,MAAOmB,EADR,EACQA,UAEf,OACE,yBAAK3B,UAAU,QACb,qDAEEQ,EAAMmC,OAEF,6BACE,kBAAC,EAAD,CACErB,UAAWoB,KAAKP,YAChBZ,SAAUmB,KAAKF,WACfhB,cAAekB,KAAKlB,gBAEtB,kBAAC,EAAD,CAAUhB,MAAOA,KAInB,4BACER,UAAU,MACVoB,KAAK,SACLC,QAASqB,KAAKd,UACdgB,SAAUjB,GAJZ,UAMMA,EAAY,aAAe,c,GArE7BkB,IAAMC,WCTxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.f6eda4fe.chunk.js","sourcesContent":["import React from 'react';\nimport { PreparedTodo } from '../Interfaces/Interfaces';\n\nimport './TodoItem.css';\n\ninterface Props {\n  todo: PreparedTodo;\n}\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  return (\n    <div className=\"todo__item-wrapper\" style={{ backgroundColor: `${todo.completed ? 'green' : 'red'}` }}>\n      <span className=\"todo__item-name\">{todo.user?.name}</span>\n      <p className=\"todo__item-title\">{todo.title}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport { PreparedTodo } from '../Interfaces/Interfaces';\nimport { TodoItem } from '../TodoItem/TodoItem';\n\nimport './TodoList.css';\n\ninterface Props {\n  todos: PreparedTodo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"todo__list list\">\n      {todos.map(todo => (\n        <li\n          className=\"list__item\"\n          key={todo.id}\n        >\n          <TodoItem todo={todo} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","const usersURL = 'https://mate.academy/students-api/users';\nconst todosURL = 'https://mate.academy/students-api/todos';\n\nexport const getUsers = async <T>(): Promise<{data: T}> => {\n  const response = await fetch(usersURL);\n\n  return response.json();\n};\n\nexport const getTodos = async <T>(): Promise<{data: T}> => {\n  const response = await fetch(todosURL);\n\n  return response.json();\n};\n","import React from 'react';\n\nimport './Buttons.css';\n\ninterface Props {\n  titleSort: () => void;\n  nameSort: () => void;\n  showCompleted: () => void;\n}\n\nexport const Buttons: React.FC<Props> = (props) => {\n  return (\n    <div className=\"todo__buttons\">\n      <button\n        className=\"btn\"\n        type=\"button\"\n        onClick={props.titleSort}\n      >\n        Sort by title\n      </button>\n      <button\n        className=\"btn\"\n        type=\"button\"\n        onClick={props.nameSort}\n      >\n        Sort by name\n      </button>\n      <button\n        className=\"btn\"\n        type=\"button\"\n        onClick={props.showCompleted}\n      >\n        Show completed first\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.css';\n\nimport { Todo, User, PreparedTodo } from './components/Interfaces/Interfaces';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { getUsers, getTodos } from './api';\nimport { Buttons } from './components/Buttonns/Buttons';\n\ninterface State {\n  todos: PreparedTodo[];\n  isLoading: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    todos: [],\n    isLoading: false,\n  };\n\n  loadTodos = async () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    const todos = (await getTodos<[]>()).data;\n    const users = (await getUsers<[]>()).data;\n    const preparedTodos: PreparedTodo[] = todos.map((todo: Todo) => (\n      {\n        ...todo,\n        user: users.find((user: User) => user.id === todo.userId) as unknown as User,\n      }\n    ));\n\n    this.setState({\n      todos: preparedTodos,\n      isLoading: false,\n    });\n  };\n\n  sortByTitle = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) => a.title.localeCompare(b.title)),\n    }));\n  };\n\n  sortByName = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) => a.user?.name.localeCompare(b.user?.name)),\n    }));\n  };\n\n  showCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.sort((a, b) => Number(b.completed) - Number(a.completed)),\n    }));\n  };\n\n  render() {\n    const { todos, isLoading } = this.state;\n\n    return (\n      <div className=\"todo\">\n        <h1>Dynamic list of todos</h1>\n        {\n          todos.length\n            ? (\n              <div>\n                <Buttons\n                  titleSort={this.sortByTitle}\n                  nameSort={this.sortByName}\n                  showCompleted={this.showCompleted}\n                />\n                <TodoList todos={todos} />\n              </div>\n            )\n            : (\n              <button\n                className=\"btn\"\n                type=\"button\"\n                onClick={this.loadTodos}\n                disabled={isLoading}\n              >\n                {`${isLoading ? 'Loading...' : 'Load'}`}\n              </button>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}